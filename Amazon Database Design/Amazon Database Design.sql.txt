----------- Aspect1




DROP TABLE Listing;
DROP TABLE Category;
DROP TABLE Seller;
DROP TABLE Product_Type;
DROP TABLE Product;


CREATE TABLE Listing(
l_id DECIMAL(10) NOT NULL,
l_name VARCHAR(30) NOT NULL,
l_description VARCHAR(100),
PRIMARY KEY (l_id));


CREATE TABLE Category(
c_id DECIMAL(10) NOT NULL,
c_name VARCHAR(30) NOT NULL,
PRIMARY KEY (c_id));


CREATE TABLE Seller(
s_id DECIMAL(10) NOT NULL,
s_name VARCHAR(30) NOT NULL,
PRIMARY KEY (s_id));


CREATE TABLE Product_Type(
pt_id DECIMAL(10) NOT NULL,
pt_name VARCHAR(30) NOT NULL,
pt_description VARCHAR(100),
PRIMARY KEY (pt_id));



CREATE TABLE Product(
p_id DECIMAL(10) NOT NULL,
p_name VARCHAR(30) NOT NULL,
p_price DECIMAL(15) NOT NULL,
p_description VARCHAR(300) NOT NULL,
l_id DECIMAL(10),
c_id DECIMAL(10) NOT NULL,
s_id DECIMAL(10),
pt_id DECIMAL(10),
pack_id DECIMAL(10),
inv_id DECIMAL(10),
PRIMARY KEY (p_id),
FOREIGN KEY (l_id) REFERENCES Listing,
FOREIGN KEY (c_id) REFERENCES Category,
FOREIGN KEY (s_id) REFERENCES Seller,
FOREIGN KEY (pt_id) REFERENCES Product_type);





CREATE OR REPLACE PROCEDURE ADD_PRODUCT( -- Add a new product
p_id_arg IN DECIMAL,
p_name_arg IN VARCHAR,
p_price_arg IN DECIMAL,
p_description_arg IN VARCHAR,
c_id_arg IN DECIMAL)
IS 
BEGIN
INSERT INTO Product
(p_id,p_name,p_price,p_description,c_id)
VALUES(p_id_arg,p_name_arg,p_price_arg,p_description_arg,c_id_arg);
END;


BEGIN
    ADD_PRODUCT(1, 'Self-driving Video Camera', 28, 'Automatically follows a subject that is being recorded.', 2);
END;
/

BEGIN
    ADD_PRODUCT(2, 'Holographic Keyboard', 28, 'Emits a three-dimensional projection of a keyboard and recognizes virtual key presses from the typist.', 1);
END;
/





SELECT *
FROM Product;






SELECT Product.p_name, Product.p_price, Category.c_name
FROM Product
INNER JOIN Category ON Product.c_id = Category.c_id
WHERE Product.p_price <= 30
AND (Category.c_name = 'Computers' OR Category.c_name = 'Electronics');







CREATE OR REPLACE PROCEDURE ADD_PRODUCT( -- Add a new product
p_id_arg IN DECIMAL,
p_name_arg IN VARCHAR,
p_price_arg IN DECIMAL,
p_description_arg IN VARCHAR,
c_id_arg IN DECIMAL,
pt_id_arg IN DECIMAL,
pt_name_arg IN VARCHAR)
IS 
BEGIN

DECLARE
    x NUMBER:=0;
BEGIN
    SELECT nvl((SELECT 1 FROM Product_Type WHERE pt_id = pt_id_arg) , 0) INTO x FROM dual;
    
    IF (X = 1) THEN
    
    INSERT INTO Product
    (p_id,p_name,p_price,p_description,c_id,pt_id)
    VALUES(p_id_arg,p_name_arg,p_price_arg,p_description_arg,c_id_arg,pt_id_arg);
    
    
    ELSE
    
    INSERT INTO Product_type(pt_id, pt_name) VALUES
    (pt_id_arg, pt_name_arg);
    INSERT INTO Product
    (p_id,p_name,p_price,p_description,c_id,pt_id)
    VALUES(p_id_arg,p_name_arg,p_price_arg,p_description_arg,c_id_arg,pt_id_arg);

    END IF;
END;
END;









BEGIN
    ADD_PRODUCT(4, 'Self-driving Video Camera', 28, 'Automatically follows a subject that is being recorded.', 2, 1, 'Video Camera');
END;/


BEGIN
    ADD_PRODUCT(5, 'Self-driving Video Camera', 28, 'Automatically follows a subject that is being recorded.', 2, 1, 'Video Camera');
END;/










-----Aspect 2


CREATE TABLE Invetory(
inv_id DECIMAL(10) NOT NULL,
QHD DECIMAL(10) NOT NULL,
PRIMARY KEY (inv_id));



ALTER TABLE Product
ADD p_condition VARCHAR(30);


ALTER TABLE Product
ADD CONSTRAINT fk_product_to_invetory
FOREIGN KEY (inv_id)
REFERENCES Invetory(inv_id);



CREATE OR REPLACE PROCEDURE ADD_INVETORY( -- Add product from seller
p_id_arg IN DECIMAL,
inv_id_arg IN DECIMAL,
QHD_arg IN DECIMAL,
p_condition_arg IN VARCHAR)
IS
BEGIN


UPDATE Invetory
SET QHD = QHD_arg
WHERE inv_id = inv_id_arg;


UPDATE Product
SET p_condition = p_condition_arg,
    inv_id = inv_id_arg
WHERE p_id = p_id_arg;

END;






INSERT INTO Invetory(inv_id,QHD)
VALUES(1,0);


INSERT INTO Invetory(inv_id,QHD)
VALUES(2,0);







BEGIN
ADD_INVETORY (1,1,2,'NEW');
END;
/

BEGIN
ADD_INVETORY (2,2,2,'NEW');
END;
/




SELECT Product.p_name, Invetory.QHD
FROM Product
INNER JOIN Invetory ON Product.inv_id = Invetory.inv_id
WHERE Invetory.QHD <= 11;






-----Aspect 3


DROP TABLE Amazon_Customer;
DROP TABLE Amazon_Account;

CREATE TABLE Amazon_Customer(
cus_id DECIMAL(10) NOT NULL,
cus_fname VARCHAR(30) NOT NULL,
cus_lname VARCHAR(30) NOT NULL,
cus_address VARCHAR(100) NOT NULL,
cus_phone DECIMAL(15) NOT NULL,
cus_email VARCHAR(50) NOT NULL,
PRIMARY KEY(cus_id));


CREATE TABLE Amazon_Account(
a_id DECIMAL(10) NOT NULL,
a_type VARCHAR(20) NOT NULL,
cus_id DECIMAL(10) NOT NULL,
PRIMARY KEY (a_id),
FOREIGN KEY (cus_id) REFERENCES Amazon_Customer);




CREATE OR REPLACE PROCEDURE ADD_AMAZON_CUSTOMER( -- Add product from seller
cus_id_arg DECIMAL,
cus_fname_arg VARCHAR,
cus_lname_arg VARCHAR,
cus_address_arg VARCHAR,
cus_phone_arg DECIMAL,
cus_email_arg VARCHAR,
a_id_arg DECIMAL,
a_type_arg VARCHAR)
IS
BEGIN


INSERT INTO Amazon_Customer
VALUES(cus_id_arg,cus_fname_arg,cus_lname_arg,cus_address_arg,cus_phone_arg,cus_email_arg);


INSERT INTO Amazon_Account
VALUES(a_id_arg,a_type_arg,cus_id_arg);

END;



BEGIN
ADD_AMAZON_CUSTOMER (1,'Yazhuo','Ma','106 Chester Street',6177854713,'ma.yazhuo.2013@gmail.com',1,'Normal');
END;
/

BEGIN
ADD_AMAZON_CUSTOMER (2,'George','Maiewski','500 Commonwealth Ave',1111111111,'maiewski@bu.edu',2,'Platinum');
END;
/



SELECT Amazon_Customer.cus_lname,COUNT(*)
FROM Amazon_Customer
INNER JOIN Amazon_Account ON Amazon_Customer.cus_id = Amazon_Account.cus_id
GROUP BY Amazon_Customer.cus_lname
HAVING COUNT(*)>=4;




-----Aspect 4


DROP TABLE Amazon_Order;
DROP TABLE Amazon_Package;


CREATE TABLE Amazon_Order(
o_id DECIMAL(10) NOT NULL,
cus_id DECIMAL(10) NOT NULL,
o_date DATE NOT NULL,
o_description VARCHAR(100),
PRIMARY KEY (o_id));


CREATE TABLE Amazon_Package(
pack_id DECIMAL(10) NOT NULL,
pack_weight DECIMAL(10) NOT NULL,
pack_type VARCHAR(30) NOT NULL,
pack_description VARCHAR(100),
o_id DECIMAL(10) NOT NULL,
PRIMARY KEY (pack_id));





ALTER TABLE Product
ADD CONSTRAINT fk_product_to_package
FOREIGN KEY (pack_id)
REFERENCES Amazon_Package(pack_id);



ALTER TABLE Amazon_Package
ADD CONSTRAINT fk_package_to_amazon_order
FOREIGN KEY (o_id)
REFERENCES Amazon_Order(o_id);



ALTER TABLE Amazon_Order
ADD (p_id DECIMAL(10) NOT NULL,
     p_number DECIMAL(10) NOT NULL);




ALTER TABLE Amazon_Order
ADD CONSTRAINT fk_order_to_product
FOREIGN KEY (p_id)
REFERENCES Product(p_id);



ALTER TABLE Amazon_Order
ADD CONSTRAINT fk_order_to_cus
FOREIGN KEY (cus_id)
REFERENCES Amazon_Customer(cus_id);





CREATE OR REPLACE PROCEDURE ADD_Amazon_Order( 
o_id_arg IN DECIMAL,
p_id_arg IN DECIMAL,
cus_id_arg IN DECIMAL,
p_number_arg IN DECIMAL,
o_date_arg IN DATE,
o_description_arg IN VARCHAR)
IS
BEGIN


INSERT INTO Amazon_Order(o_id,p_id,cus_id,p_number,o_date,o_description)
VALUES(o_id_arg,p_id_arg,cus_id_arg,p_number_arg,o_date_arg,o_description_arg);

END;







BEGIN
ADD_Amazon_Order (1,1,1,1,CAST('04-DEC-2018' AS DATE),'None');
END;
/

BEGIN
ADD_Amazon_Order (2,2,2,3,CAST('04-DEC-2018' AS DATE),'None');
END;
/



BEGIN
ADD_AMAZON_CUSTOMER (3,'Chenyang','Wang','107 Chester Street',6177854713,'chengyang.wang@gmail.com',6,'Golden');
END;
/

BEGIN
ADD_AMAZON_CUSTOMER (4,'James','Yu','108 Chester Street',6666666666,'james.yu@gmail.com',7,'Golden');
END;
/


BEGIN
ADD_Amazon_Order (3,1,3,2,CAST('05-DEC-2018' AS DATE),'None');
END;
/

BEGIN
ADD_Amazon_Order (4,1,4,1,CAST('05-DEC-2018' AS DATE),'None');
END;
/


SELECT cus_fname, cus_lname, cus_address
FROM Amazon_Order
JOIN Amazon_Customer ON Amazon_Order.cus_id = Amazon_Customer.cus_id
WHERE Amazon_Order.p_id IN( SELECT p_id
                            FROM Amazon_Order
                            GROUP BY p_id
                            HAVING COUNT(p_id) >= 3)





-----Aspect 5





CREATE OR REPLACE PROCEDURE ADD_Amazon_Package( 
pack_id_arg IN DECIMAL,
pack_weight_arg IN DECIMAL,
pack_type_arg IN VARCHAR,
pack_description_arg IN VARCHAR,
o_id_arg IN DECIMAL)
IS
BEGIN


INSERT INTO Amazon_Package(pack_id,pack_weight,pack_type,pack_description,o_id)
VALUES(pack_id_arg, pack_weight_arg, pack_type_arg, pack_description_arg, o_id_arg);

END;




BEGIN
ADD_Amazon_Package (1,10,'Two Day','Tracking Number: 10010',1);
END;
/


BEGIN
ADD_Amazon_Package (2,20,'One Day','Tracking Number: 20020',2);
END;
/






SELECT pack_id
FROM(SELECT pack_id,pack_weight
     FROM Amazon_Package
     WHERE pack_type = 'Two Day')
WHERE pack_weight <= 10;






-------Index



CREATE INDEX product_price ON Product ( p_price);
